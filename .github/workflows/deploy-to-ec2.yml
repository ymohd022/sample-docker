name: EC2 Deployment

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      shell: bash

    - name: Launch EC2 Instance
      id: launch
      run: |
        echo "Launching EC2 instance..."
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-0f5ee92e2d63afc18 \
          --count 1 \
          --instance-type t2.micro \
          --key-name ${{ secrets.KEY_PAIR_NAME }} \
          --security-group-ids ${{ secrets.SECURITY_GROUP_ID }} \
          --subnet-id ${{ secrets.SUBNET_ID }} \
          --region ${{ secrets.AWS_REGION }} \
          --query 'Instances[0].InstanceId' \
          --output text)

        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        echo "Waiting for instance to be running..."
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID --region ${{ secrets.AWS_REGION }}

        PUBLIC_DNS=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --region ${{ secrets.AWS_REGION }} \
          --query 'Reservations[0].Instances[0].PublicDnsName' \
          --output text)

        echo "EC2_HOST=$PUBLIC_DNS" >> $GITHUB_ENV
        echo "Public DNS: $PUBLIC_DNS"

    - name: SSH into EC2 (Optional)
      run: |
        echo "Connecting to EC2 instance..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ env.EC2_HOST }} "echo Hello from EC2"
